/* SCROLLBOX */
#scrollbox:not([page-disabled]) {
  background-color: rgb(229,229,229);
  background-image: url(chrome://browser/skin/newtab/noise.png),
                    -moz-linear-gradient(rgba(255,255,255,.5), rgba(255,255,255,.2));
  background-attachment: fixed;
}

/* TOGGLE */
#toggle {
  width: 16px;
  height: 16px;
  padding: 0;
  border: none;
  background: -216px 0 transparent url(chrome://browser/skin/newtab/controls.png);
}

#toggle[page-disabled] {
  background-position: -232px 0;
}


/* SITES */
.site {
  text-decoration: none;
  -moz-transition-property: top, left, opacity, box-shadow, background-color;
}

.site:hover,
.site[dragged] {
  box-shadow: 0 0 10px rgba(8,22,37,.3);
}

.site[dragged] {
  -moz-transition-property: box-shadow, background-color;
  background-color: rgb(242,242,242);
}


/* CONTROLS */
.control {
  width: 24px;
  height: 24px;
  padding: 1px 2px 3px;
  border: none;
  background: transparent url(chrome://browser/skin/newtab/controls.png);
}

.control-pin:hover {
  background-position: -24px 0;
}

.control-pin:active {
  background-position: -48px 0;
}

.control-pin[pinned] {
  background-position: -72px 0;
}

.control-pin[pinned]:hover {
  background-position: -96px 0;
}

.control-pin[pinned]:active {
  background-position: -120px 0;
}

.control-block {
  background-position: -144px 0;
}

.control-block:hover {
  background-position: -168px 0;
}

.control-block:active {
  background-position: -192px 0;
}

:root {
  -moz-user-focus: normal;
}

input[type=button] {
  cursor: pointer;
}

/* SCROLLBOX */
#scrollbox {
  display: -moz-box;
  position: relative;
  -moz-box-flex: 1;
}

/* MARGINS */
#vertical-margin {
  display: -moz-box;
  position: relative;
  -moz-box-flex: 1;
  -moz-box-orient: vertical;
}

#margin-top {
  min-height: 50px;
  max-height: 80px;
  -moz-box-flex: 1;
}

#margin-bottom {
  min-height: 40px;
  max-height: 100px;
  -moz-box-flex: 1;
}

#horizontal-margin {
  display: -moz-box;
  -moz-box-flex: 5;
}

.side-margin {
  min-width: 40px;
  max-width: 300px;
  -moz-box-flex: 1;
}

/* GRID */
#grid {
  display: -moz-box;
  -moz-box-flex: 5;
  -moz-box-orient: vertical;
  min-width: 600px;
  min-height: 400px;
  -moz-transition: 100ms ease-out;
  -moz-transition-property: opacity;
}

#grid[page-disabled] {
  opacity: 0;
}

#grid[locked],
#grid[page-disabled] {
  pointer-events: none;
}

/* ROWS */
.row {
  display: -moz-box;
  -moz-box-orient: horizontal;
  -moz-box-direction: normal;
  -moz-box-flex: 1;
}

/* CELLS */
.cell {
  display: -moz-box;
  -moz-box-flex: 1;
}

/* SITES */
.site {
  position: relative;
  -moz-box-flex: 1;
  -moz-transition: 100ms ease-out;
  -moz-transition-property: top, left, opacity;
}

.site[frozen] {
  position: absolute;
  pointer-events: none;
}

.site[dragged] {
  -moz-transition-property: none;
  z-index: 10;
}

.thumbnail {
  opacity: .8;
  -moz-transition: opacity 100ms ease-out;
}

.thumbnail[dragged],
.link:-moz-focusring > .thumbnail,
.site:hover > .link > .thumbnail {
  opacity: 1;
}

/* CONTROLS */
.control {
  position: absolute;
  top: 4px;
  opacity: 0;
  -moz-transition: opacity 100ms ease-out;
}

.control:-moz-focusring,
.site:hover > .control {
  opacity: 1;
}

.control[dragged] {
  opacity: 0 !important;
}

@media (-moz-touch-enabled) {
  .control {
    opacity: 1;
  }
}

.control-pin:-moz-locale-dir(ltr),
.control-block:-moz-locale-dir(rtl) {
  left: 4px;
}

.control-block:-moz-locale-dir(ltr),
.control-pin:-moz-locale-dir(rtl) {
  right: 4px;
}

/* DRAG & DROP */

/*
 * This is just a temporary drag element used for dataTransfer.setDragImage()
 * so that we can use custom drag images and elements. It needs an opacity of
 * 0.01 so that the core code detects that it's in fact a visible element.
 */
.drag {
  width: 1px;
  height: 1px;
  background-color: #fff;
  opacity: 0.01;
}
